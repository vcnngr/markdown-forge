# =============================================================================
# MARKDOWN-FORGE - Environment Configuration
# =============================================================================
# 
# Copia questo file in .env e configura le tue API keys
# ALMENO UNA API key Ã¨ necessaria per far funzionare l'applicazione
#
# Comando setup:
#   cp .env.example .env
#   nano .env  # modifica con le tue keys
# =============================================================================

# -----------------------------------------------------------------------------
# AI PROVIDERS - Configura almeno uno dei seguenti
# -----------------------------------------------------------------------------

# ðŸ¤– ANTHROPIC (Claude) - RACCOMANDATO
# Ottieni la tua API key su: https://console.anthropic.com/
# Modelli disponibili: claude-3-sonnet, claude-3-haiku
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ðŸ§  OPENAI (GPT-4) - Alternativa potente
# Ottieni la tua API key su: https://platform.openai.com/api-keys
# Modelli disponibili: gpt-4, gpt-4-turbo, gpt-3.5-turbo
OPENAI_API_KEY=your_openai_api_key_here

# âœ¨ GOOGLE (Gemini) - Opzione gratuita
# Ottieni la tua API key su: https://makersuite.google.com/app/apikey
# Modelli disponibili: gemini-pro, gemini-pro-vision
GEMINI_API_KEY=your_gemini_api_key_here

# -----------------------------------------------------------------------------
# APPLICATION SETTINGS
# -----------------------------------------------------------------------------

# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=false

# CORS Settings (per sviluppo locale)
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://127.0.0.1:8000

# -----------------------------------------------------------------------------
# AI MODEL SETTINGS
# -----------------------------------------------------------------------------

# Default AI Provider (claude | openai | gemini)
DEFAULT_AI_PROVIDER=claude

# Model Specifications
CLAUDE_MODEL=claude-3-sonnet-20240229
OPENAI_MODEL=gpt-4
GEMINI_MODEL=gemini-pro

# Request Limits
MAX_TOKENS=4000
REQUEST_TIMEOUT=120
RATE_LIMIT_PER_MINUTE=30

# -----------------------------------------------------------------------------
# FILE PROCESSING
# -----------------------------------------------------------------------------

# Upload Limits
MAX_FILE_SIZE_MB=50
MAX_TEXT_LENGTH=100000
ALLOWED_EXTENSIONS=pdf,txt,md,docx

# Output Settings
DEFAULT_OUTPUT_FORMAT=markdown
DEFAULT_FILENAME=output.md

# PDF Processing
PDF_EXTRACTION_TIMEOUT=60
PDF_MAX_PAGES=500

# -----------------------------------------------------------------------------
# LOGGING & MONITORING
# -----------------------------------------------------------------------------

# Log Level (DEBUG | INFO | WARNING | ERROR)
LOG_LEVEL=INFO

# Log Format
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Enable/Disable specific logs
ENABLE_API_LOGS=true
ENABLE_ERROR_TRACKING=true
ENABLE_PERFORMANCE_METRICS=false

# -----------------------------------------------------------------------------
# SECURITY
# -----------------------------------------------------------------------------

# API Security (opzionale per uso locale)
# API_SECRET_KEY=your_secret_key_here
# ENABLE_API_AUTHENTICATION=false

# Rate Limiting
ENABLE_RATE_LIMITING=true
RATE_LIMIT_STORAGE=memory

# Content Security
SANITIZE_INPUT=true
MAX_CONCURRENT_REQUESTS=10

# -----------------------------------------------------------------------------
# REDIS (Opzionale - per caching avanzato)
# -----------------------------------------------------------------------------

# Uncomment per abilitare Redis caching
# REDIS_URL=redis://localhost:6379
# REDIS_DB=0
# CACHE_TTL_SECONDS=3600
# ENABLE_RESULT_CACHING=false

# -----------------------------------------------------------------------------
# DATABASE (Opzionale - per logging/analytics)
# -----------------------------------------------------------------------------

# Uncomment per abilitare database logging
# DATABASE_URL=sqlite:///./markdown_forge.db
# ENABLE_USAGE_ANALYTICS=false
# KEEP_CONVERSION_HISTORY=false

# -----------------------------------------------------------------------------
# WEBHOOK NOTIFICATIONS (Opzionale)
# -----------------------------------------------------------------------------

# Uncomment per abilitare notifiche webhook
# WEBHOOK_URL=https://your-webhook-endpoint.com/notify
# WEBHOOK_SECRET=your_webhook_secret
# ENABLE_WEBHOOKS=false

# -----------------------------------------------------------------------------
# DEVELOPMENT SETTINGS
# -----------------------------------------------------------------------------

# Development Mode
DEVELOPMENT_MODE=false

# Auto-reload (solo per development)
AUTO_RELOAD=false

# Debug API responses
DEBUG_API_RESPONSES=false

# Test Mode (usa mock responses)
TEST_MODE=false

# -----------------------------------------------------------------------------
# DOCKER SPECIFIC
# -----------------------------------------------------------------------------

# Container Settings
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# Health Check
HEALTH_CHECK_INTERVAL=30

# -----------------------------------------------------------------------------
# EXAMPLE CONFIGURATIONS
# -----------------------------------------------------------------------------

# Configurazione Minima (solo Claude):
# ANTHROPIC_API_KEY=sk-ant-api03-xxxxx

# Configurazione Completa (tutti i provider):
# ANTHROPIC_API_KEY=sk-ant-api03-xxxxx
# OPENAI_API_KEY=sk-xxxxx
# GEMINI_API_KEY=xxxxx

# Configurazione Production:
# ANTHROPIC_API_KEY=sk-ant-api03-xxxxx
# DEBUG=false
# LOG_LEVEL=WARNING
# ENABLE_RATE_LIMITING=true
# MAX_CONCURRENT_REQUESTS=5

# =============================================================================
# QUICK SETUP GUIDE
# =============================================================================
#
# 1. Copia questo file:
#    cp .env.example .env
#
# 2. Ottieni almeno una API key:
#    - Claude (raccomandato): https://console.anthropic.com/
#    - OpenAI: https://platform.openai.com/api-keys  
#    - Gemini: https://makersuite.google.com/app/apikey
#
# 3. Modifica il file .env con la tua API key:
#    nano .env
#
# 4. Avvia l'applicazione:
#    docker-compose up --build
#
# 5. Accedi all'interfaccia web:
#    http://localhost:8000
#
# =============================================================================
